// components/NotificationSidebar.tsx
// ‡∏Ñ‡∏≠‡∏°‡πÇ‡∏û‡πÄ‡∏ô‡∏ô‡∏ï‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô (Notification) ‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö Modal ‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏ï‡∏£‡∏á‡∏Å‡∏•‡∏≤‡∏á

import React from 'react';
import { SimpleNotification } from '../types';
import { XMarkIcon } from '../constants';

interface NotificationSidebarProps {
  isOpen: boolean;
  onClose: () => void;
  notifications: SimpleNotification[];
}

const NotificationSidebar: React.FC<NotificationSidebarProps> = ({ isOpen, onClose, notifications }) => {
    // ‡πÅ‡∏¢‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏õ‡πá‡∏ô "‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î" ‡πÅ‡∏•‡∏∞ "‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏µ‡πâ"
    const latestNotifications = notifications.filter(n => n.isLatest);
    const previousNotifications = notifications.filter(n => !n.isLatest);

    // ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á render ‡∏≠‡∏∞‡πÑ‡∏£‡πÄ‡∏•‡∏¢‡∏ñ‡πâ‡∏≤ Modal ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏õ‡∏¥‡∏î
    if (!isOpen) {
        return null;
    }

    return (
        // Full screen overlay
        <div
            className="fixed inset-0 bg-white z-[60] transition-opacity duration-300"
            role="dialog"
            aria-modal="true"
        >
            {/* Full screen container */}
            <div
                className="bg-white text-slate-800 w-full h-full flex flex-col"
            >
                {/* ‡∏™‡πà‡∏ß‡∏ô‡∏´‡∏±‡∏ß‡∏Ç‡∏≠‡∏á Full Screen */}
                <div className="flex items-center justify-between p-6 border-b border-gray-200 flex-shrink-0 bg-white">
                    <h2 className="text-2xl font-bold text-slate-800">‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô</h2>
                    <button onClick={onClose} className="p-3 rounded-full hover:bg-gray-100 transition-colors">
                        <XMarkIcon className="w-7 h-7 text-slate-600" />
                    </button>
                </div>

                {/* ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô (‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏î‡πâ) - Full Screen */}
                <div className="flex-grow overflow-y-auto p-6 space-y-6 bg-gray-50">
                    {/* ‡∏™‡πà‡∏ß‡∏ô "‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î" */}
                    {latestNotifications.length > 0 && (
                        <section>
                            <h3 className="font-bold text-xl mb-4 text-slate-700 px-2">‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î</h3>
                            <div className="space-y-4">
                                {latestNotifications.map(n => (
                                    <div key={n.id} className="bg-white p-5 rounded-xl shadow-md border-l-4 border-green-500 hover:shadow-lg transition-shadow">
                                        <p className="text-base text-slate-700 leading-relaxed">{n.message}</p>
                                        <p className="text-sm text-slate-500 text-right mt-3 font-medium">{n.timestamp}</p>
                                    </div>
                                ))}
                            </div>
                        </section>
                    )}

                    {/* ‡∏™‡πà‡∏ß‡∏ô "‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏µ‡πâ" */}
                    {previousNotifications.length > 0 && (
                        <section>
                            <h3 className="font-bold text-xl mb-4 text-slate-700 px-2">‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏µ‡πâ</h3>
                            <div className="space-y-4">
                                {previousNotifications.map(n => (
                                    <div key={n.id} className="bg-white p-5 rounded-xl shadow-md border-l-4 border-gray-400 hover:shadow-lg transition-shadow">
                                        <p className="text-base text-slate-700 leading-relaxed">{n.message}</p>
                                        <p className="text-sm text-slate-500 text-right mt-3 font-medium">{n.timestamp}</p>
                                    </div>
                                ))}
                            </div>
                        </section>
                    )}

                    {/* ‡∏Å‡∏£‡∏ì‡∏µ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô */}
                    {notifications.length === 0 && (
                        <div className="text-center py-20 text-slate-500">
                            <div className="text-6xl mb-4">üîî</div>
                            <p className="text-xl">‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô</p>
                        </div>
                    )}
                </div>
            </div>
        </div>
    );
};

export default NotificationSidebar;